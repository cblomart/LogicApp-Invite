{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppNamePrefix": {
            "type": "string",
            "defaultValue": "guest-invite",
            "metadata": {
                "description": "Prefix for logic app names"
            }
        },
        "eventHubSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [ "Basic", "Standard" ],
            "metadata": {
                "description": "Specifies the messaging tier for Event Hub Namespace."
            }
        },
        "graphChangeTrackingSp": {
            "type": "string",
            "metadata": {
                "description": "ID of the 'Microsoft Graph Change Tracking' service principal"
            }
        }
    },
    "variables": {
        "eventHubNamespaceName": "[concat(parameters('LogicAppNamePrefix'), 'hub-ns')]",
        "managedidentity": "[concat(parameters('LogicAppNamePrefix'), '-identity')]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('eventHubNamespaceName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('eventHubSku')]",
                "tier": "[parameters('eventHubSku')]",
                "capacity": 1
            },
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('eventHubNamespaceName'),'/usersevents')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "messageRetentionInDays": 7,
                "partitionCount": 1
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(variables('eventHubNamespaceName'), '/usersevents/usereventspolicy')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), 'usersevents')]"
            ],
            "properties": {
                "rights": [
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2020-04-01-preview",
            "name": "[concat(parameters('LogicAppNamePrefix'), '-kv')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('graphChangeTrackingSp')]",
                        "permissions": {
                            "secrets": [
                                "Get"
                            ]
                        }
                    }
                ],
                "vaultUri": "[concat('https://',parameters('LogicAppNamePrefix'), '.vault.azure.net/')]"
            },
            "resources": [
                {
                    "type": "secrets",
                    "apiVersion": "2020-04-01-preview",
                    "name": "usersevents",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults',concat(parameters('LogicAppNamePrefix'), '-kv'))]",
                        "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules',variables('eventHubNamespaceName'),'usersevents','usereventspolicy')]"
                    ],
                    "properties": {
                        "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules',variables('eventHubNamespaceName'),'usersevents','usereventspolicy'),'2015-08-01').primaryConnectionString]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('managedidentity')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "name": "guestInviterRole",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-09-01",
            "properties": {
                "roleDefinitionId": "95e79109-95c0-4d8e-aee3-d01accf2d47b",
                "principalId": "[reference(resourceID('Microsoft.ManagedIdentity/userAssignedIdentities',variables('managedidentity')), '2018-11-30').principalId]"
            },
            "dependsOn": [ 
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities',variables('managedidentity'))]"
            ] 
        },
        {
            "properties": 
            {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Compose_subscription_update": {
                                    "inputs": {
                                        "expirationDateTime": "@variables('expiration')"
                                    },
                                    "runAfter": {},
                                    "type": "Compose"
                                },
                                "For_each": {
                                    "actions": {
                                        "Update_scubsciption": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": "@outputs('Compose_subscription_update')",
                                                "headers": {
                                                    "content-type": "application/json"
                                                },
                                                "method": "PATCH",
                                                "uri": "https://graph.microsoft.com/v1.0/subscriptions/@{items('For_each')?['id']}"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        }
                                    },
                                    "foreach": "@body('Parse_JSON')?['value']",
                                    "runAfter": {
                                        "Compose_subscription_update": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "else": {
                                "actions": {
                                    "Compose_subscription": {
                                        "inputs": {
                                            "changeType": "updated",
                                            "expirationDateTime": "@variables('expiration')",
                                            "notificationUrl": "@variables('notificationUrl')",
                                            "resource": "users"
                                        },
                                        "runAfter": {},
                                        "type": "Compose"
                                    },
                                    "Create_subscription": {
                                        "inputs": {
                                            "authentication": {
                                                "audience": "https://graph.microsoft.com",
                                                "type": "ManagedServiceIdentity"
                                            },
                                            "body": "@outputs('Compose_subscription')",
                                            "headers": {
                                                "content-type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "https://graph.microsoft.com/v1.0/subscriptions"
                                        },
                                        "runAfter": {
                                            "Compose_subscription": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Http"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Parse_JSON')?['value'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "GET_subscriptions": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/subscriptions"
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Initialize_notification_URL": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "notificationUrl",
                                        "type": "string",
                                        "value": "[concat('EventHub:','https://',parameters('LogicAppNamePrefix'), '.vault.azure.net/secrets/usersevents','?tenantId=',subscription().tenantId)]"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "expiration",
                                        "type": "string",
                                        "value": "@{addDays(utcNow(),2)}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_notification_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@body('GET_subscriptions')",
                                "schema": {
                                    "properties": {
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "changeType": {
                                                        "type": "string"
                                                    },
                                                    "expirationDateTime": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "notificationUrl": {
                                                        "type": "string"
                                                    },
                                                    "resource": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "resource",
                                                    "applicationId",
                                                    "changeType",
                                                    "notificationUrl",
                                                    "expirationDateTime"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "GET_subscriptions": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    }
                },
                "parameters": {}
            },
            "name": "[concat(parameters('LogicAppNamePrefix'),'-subsrciption')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-06-01",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities',variables('managedidentity'))]": {}
                }
            },
            "dependsOn": [ 
                "[resourceId('Microsoft.KeyVault/vaults/secrets',concat(parameters('LogicAppNamePrefix'), '-kv'),'usersevents')]",
                "[resourceId('Microsoft.Authorization/roleAssignments','guestInviterRole')]"
            ] 
        }
    ],
    "outputs": {}
}